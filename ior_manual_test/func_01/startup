#!/usr/bin/ksh -p

. ../basic/common.kshlib

source ../basic/test.cfg

typeset pf1=${PF_A}
typeset pf2=${PF_B}

typeset iod=${IOD}

typeset logpath=${LOGPATH}
typeset port_wwn_pf1_vf0=${PORT_WWN_PF_A_VF0}
typeset node_wwn_pf1_vf0=${NODE_WWN_PF_A_VF0}
typeset port_wwn_pf1_vf1=${PORT_WWN_PF_A_VF1}
typeset node_wwn_pf1_vf1=${NODE_WWN_PF_A_VF1}


# destroy all the VFs which have been created 
tmpfile=$(mktemp)
ldm list-io|grep "${pf1}\.VF" > ${tmpfile}
if [[ $? -eq 0 ]];then
    while read uvf nVF nBUS udomain;do
        if [[ ${udomain} != "" ]];then
            ldm rm-io ${uvf} ${udomain}
        fi    
    done < ${tmpfile}
    ldm destroy-vf -n max ${pf1}
fi

# create new VFs
tmpfile1=$(mktemp)
ldm create-vf port-wwn=${port_wwn_pf1_vf0} node-wwn=${node_wwn_pf1_vf0} ${pf1} > ${tmpfile1}
if [[ $? != 0 ]];then
    exit 1
else
    vf0_pf1=$(awk -F':' '{print $2}' ${tmpfile1})
fi

tmpfile2=$(mktemp)
ldm create-vf port-wwn=${port_wwn_pf1_vf1} node-wwn=${node_wwn_pf1_vf1} ${pf1} > ${tmpfile2}
if [[ $? != 0 ]];then
    exit 1
else
    vf1_pf1=$(awk -F':' '{print $2}' ${tmpfile2})
fi

ldm add-io ${vf0_pf1} ${iod}
[[ $? -ne 0 ]] && exit 1

ldm add-io ${vf1_pf1} ${iod}
[[ $? -ne 0 ]] && exit 1

ldm stop -r ${iod}

if ![[ -d ${logpath} ]];then
    mkdir -p ${logpath}
fi

print "Rebooting ${iod}..."
sleep 120

name=$(python ../basic/python/ior.py -d ${iod} -p ${password} -r 'hostname' -t 300)
print "${name} boot up success"
